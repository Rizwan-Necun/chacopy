// Generated by data binding compiler. Do not edit!
package com.example.chaquopy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.chaquopy.MainActivityViewModel;
import com.example.chaquopy.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MainActivityDataBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imageEight;

  @NonNull
  public final ImageView imageFive;

  @NonNull
  public final ImageView imageFour;

  @NonNull
  public final AppCompatImageView imageNine;

  @NonNull
  public final ImageView imageOne;

  @NonNull
  public final ImageView imageSeven;

  @NonNull
  public final ImageView imageSix;

  @NonNull
  public final ImageView imageThree;

  @NonNull
  public final ImageView imageTwo;

  @NonNull
  public final Button selectImageButton;

  @Bindable
  protected MainActivityViewModel mViewModel;

  protected MainActivityDataBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imageEight, ImageView imageFive, ImageView imageFour, AppCompatImageView imageNine,
      ImageView imageOne, ImageView imageSeven, ImageView imageSix, ImageView imageThree,
      ImageView imageTwo, Button selectImageButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imageEight = imageEight;
    this.imageFive = imageFive;
    this.imageFour = imageFour;
    this.imageNine = imageNine;
    this.imageOne = imageOne;
    this.imageSeven = imageSeven;
    this.imageSix = imageSix;
    this.imageThree = imageThree;
    this.imageTwo = imageTwo;
    this.selectImageButton = selectImageButton;
  }

  public abstract void setViewModel(@Nullable MainActivityViewModel viewModel);

  @Nullable
  public MainActivityViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static MainActivityDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MainActivityDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MainActivityDataBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static MainActivityDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MainActivityDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MainActivityDataBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static MainActivityDataBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MainActivityDataBinding bind(@NonNull View view, @Nullable Object component) {
    return (MainActivityDataBinding)bind(component, view, R.layout.activity_main);
  }
}
